/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
char** findWords(char** words, int n, int* returnSize) {
    char** str=(char**)malloc(3*sizeof(char*));
    char** ans=(char**)malloc(n*sizeof(char*));
    int z=0;
    for(int i=0;i<3;i++){
        str[i]=(char*)malloc(35*sizeof(char));
        if(i==0){
            str[i]="qwertyuiopQWERTYUIOP";
        }else if(i==1){
            str[i]="asdfghjklASDFGHJKL";
        }else{
            str[i]="zxcvbnmZXCVBNM";
        }
    }

    for(int i=0;i<n;i++){
        //first
        bool isTrue=true;
        for(int j=0;j<strlen(words[i]);j++){
            bool flag=false;
            char ch=words[i][j];
            for(int k=0;k<strlen(str[0]);k++){
                if(ch==str[0][k]){
                    flag=true;
                    break;
                }
            }
            if(!flag){
                isTrue=false;
                break;
            }
        }
        if(isTrue){
            ans[z]=(char*)malloc(102*sizeof(char));
            ans[z++]=words[i];
        }else{
            isTrue=true;
            for(int j=0;j<strlen(words[i]);j++){
                bool flag=false;
                char ch=words[i][j];
                for(int k=0;k<strlen(str[1]);k++){
                    if(ch==str[1][k]){
                        flag=true;
                        break;
                    }
                }
                if(!flag){
                    isTrue=false;
                    break;
                }
            }
            if(isTrue){
                ans[z]=(char*)malloc(102*sizeof(char));
                ans[z++]=words[i];
            }else{
                isTrue=true;
                for(int j=0;j<strlen(words[i]);j++){
                    bool flag=false;
                    char ch=words[i][j];
                    for(int k=0;k<strlen(str[2]);k++){
                        if(ch==str[2][k]){
                            flag=true;
                            break;
                        }
                    }
                    if(!flag){
                        isTrue=false;
                        break;
                    }
                }
                if(isTrue){
                    ans[z]=(char*)malloc(102*sizeof(char));
                    ans[z++]=words[i];
                }
            }
        }

    }
    *returnSize=z;
    return ans;
}
